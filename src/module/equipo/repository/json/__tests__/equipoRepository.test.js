const EquipoRepository = require("../equipoRepository");
const equipoRepository = new EquipoRepository();
test('Crea un equipo cuando la entidad no tiene id', async () => {
    // const equipoMock = { nombre: 'nombre ficticio' };
    
  });
/*
test('Actualiza un equipo cuando la entidad tiene un id', async () => {
    const equipoMock = {
      id: '1',
      nombre: 'name',
      nombreBreve: 'short',
      siglas: 'tla',
      escudoUrl: '/img/nada.jpg',
      direccion: 'Av Siempre Viva 123',
      telefono: '37359999',
      web: 'www.test.com',
      email: 'test@gmail.com',
      fundado: '1820',
      coloresEquipo: 'azul',
      sede: 'Argentina',
    };
    // const NEW_AUTOGENERATED_ID = 1;
    const newEquipo = await equipoRepository.save(equipoMock);
    expect(newEquipo.id).toEqual(1);
    // expect(equipoRepository.update).toHaveBeenCalled();
  });
*/
  test('Borrar un equipo devuelve True', async (done) => {
    const equipoMock = {
      id: '1',
      nombre: 'name',
      nombreBreve: 'short',
      siglas: 'tla',
      escudoUrl: '/img/nada.jpg',
      direccion: 'Av Siempre Viva 123',
      telefono: '37359999',
      web: 'www.test.com',
      email: 'test@gmail.com',
      fundado: '1820',
      coloresEquipo: 'azul',
      sede: 'Argentina',
    };
    // const NEW_AUTOGENERATED_ID = 1;
    const newEquipo = await equipoRepository.delete(equipoMock);
    expect(newEquipo).toEqual(true);
    done();
  });
/* 
  test('Borrar un equipo sin parÃ¡metros da error', async () => {

  });

  test('Borrar un equipo sin id da error', async () => {

  });
  
  test('Borrar un equipo con id inexistente devuelve false', async () => {
 
  }); */